git config --global user.name ""
git config --global user.email 12344562@132.com
mkdir    创建目录
cd       进入目录
git init 把当前目录加入到git
git init --bare test.git 直接建造一个裸库
git init --bare

git diff [filename] 查看修改内容
git diff --cached   查看暂存区和版本库的差异
git diff --staged    同上
git add [filename]  添加到暂存区，准备提交
git commit -m [filename] "注释"   提交
git add -p
git rebase -i branch
git rebase -i HEAD~n
git rebase -i hash_id^

git log   包含目前版本到修改日志(注释 时间 版本哈希 修改人) 可以带文件名字用以指定查看 
  --pretty=oneline 在一行显示
git reflog 只包含版本哈希和注释 但是包含了所有的版本(回滚也包含) 可以带文件名字用以指定查看

git status 查看状态(暂存区 提交)    gst
git reset --hard HEAD^  回滚到上一个版本  HEAD~100 上100个版本
                 版本号 状态更新到  这个版本号指定的版本
git reset 可用于git add 之后的撤销操作

git remote add origin git@server:path/name.git
关联远程库  server为服务器名 path为路径 name为远程库名
git push -u origin master    将本地内容推送(-u 为指定默认主机并关联 以便于以后推送和拉取时简化命令)
git push --all origin 推送所有分支到远程主机
git push 省略了远程主分支和本地主分支
git push --delete origin [name] 删除远程分支 
git remote prune origin 删除远程已不存在，本地git branch -r 还能看到的分支
git clone git@server:path/name.git 克隆远程库
git pull --rebase origin master  合并远程库到本地 冲突时合并代码
git pull 同上 
git fetch   pull = fetch + merge
git fetch -p
git merge
git tag -a <version> -m "  "
git push origin --tags
git branch  查看分支
git branch [name] 创建分支
git branch -d [name] 删除分支
git branch -m 123 234 重命名本地123分支为234
git checkout [name] 切换分支  gco
git checkout -b [name]  创建新分支并切换
git checkout -b [name] <origin/branch>   拉取远程指定分支
git merge [name] 合并分支到当前分支
git stash 暂时隐藏此次工作
git stash list 查看stash列表
git stash apply stash@\{0\}   指定切换到编号为0的stash
git stash drop stash@\{0\}    指定删除编号为0的stash
git stash pop stash@\{0|}     切换到编号为0的stash继续工作并删除此stash
如果不指定stash编号 从0开始
